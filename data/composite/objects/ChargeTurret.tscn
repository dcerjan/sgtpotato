[gd_scene load_steps=22 format=2]

[ext_resource path="res://data/image/turret.png" type="Texture" id=1]
[ext_resource path="res://data/composite/objects/ChargeTurret.gd" type="Script" id=2]
[ext_resource path="res://data/composite/objects/new_gradient.res" type="Gradient" id=3]
[ext_resource path="res://data/image/beam_gradient.png" type="Texture" id=4]
[ext_resource path="res://data/image/wall.png" type="Texture" id=5]

[sub_resource type="Curve" id=1]
max_value = 10.0
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.0206612, 9.26229 ), 0.0, 0.0, 0, 0, Vector2( 0.103306, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.132231, 7.37705 ), 0.0, 0.0, 0, 0, Vector2( 0.31405, 3.19672 ), 0.0, 0.0, 0, 0, Vector2( 0.557851, 4.01639 ), 0.0, 0.0, 0, 0, Vector2( 0.644628, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.809917, 2.37705 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="Curve" id=2]
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.044226, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.0786241, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.0982801, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.157248, 0.106557 ), 0.0, 0.0, 0, 0, Vector2( 0.167076, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.255528, 0.180328 ), 0.0, 0.0, 0, 0, Vector2( 0.255528, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.346437, 0.295082 ), 0.0, 0.0, 0, 0, Vector2( 0.358722, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.422604, 0.459016 ), 0.0, 0.0, 0, 0, Vector2( 0.503686, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.58231, 0.590164 ), 0.0, 0.0, 0, 0, Vector2( 0.648649, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.793612, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CanvasItemMaterial" id=3]

[sub_resource type="GradientTexture" id=4]
gradient = ExtResource( 3 )
width = 32

[sub_resource type="ParticlesMaterial" id=5]
emission_shape = 1
emission_sphere_radius = 5.0
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
radial_accel = -6.0
scale = 0.5
color_ramp = SubResource( 4 )

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -568.819, -156.25 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 140, 20 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="GradientTexture" id=8]
gradient = ExtResource( 3 )

[sub_resource type="ParticlesMaterial" id=9]
emission_shape = 2
emission_box_extents = Vector3( 50, 2, 1 )
flag_align_y = true
flag_rotate_y = true
flag_disable_z = true
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = -0.1
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 2.0
scale = 0.5
color_ramp = SubResource( 8 )

[sub_resource type="Gradient" id=10]
offsets = PoolRealArray( 0, 0.105263, 0.1875, 0.267857, 0.559524, 1 )
colors = PoolColorArray( 1, 0, 0, 0, 1, 0, 0, 0.25, 1, 0, 0, 1, 1, 0, 0, 0.245421, 1, 0, 0, 0.517647, 1, 0, 0, 0 )

[sub_resource type="GradientTexture" id=11]
gradient = SubResource( 10 )

[sub_resource type="ParticlesMaterial" id=12]
emission_shape = 2
emission_box_extents = Vector3( 50, 4, 1 )
flag_align_y = true
flag_rotate_y = true
flag_disable_z = true
direction = Vector3( 0, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale = 0.5
color_ramp = SubResource( 11 )

[sub_resource type="ParticlesMaterial" id=13]
emission_shape = 2
emission_box_extents = Vector3( 50, 2, 1 )
flag_align_y = true
flag_rotate_y = true
flag_disable_z = true
direction = Vector3( 0, -1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = -0.1
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 2.0
scale = 0.5
color_ramp = SubResource( 8 )

[sub_resource type="RectangleShape2D" id=16]
extents = Vector2( 2, 28 )

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;

uniform float hdr_threshold = 0.3;
uniform float color_threshold = 0.5;

vec4 sample_glow_pixel(sampler2D tex, vec2 uv) {
  return max(textureLod(tex, uv, 2.0) - hdr_threshold, vec4(0.0));
}

vec4 sample_glow_pixel_wide(sampler2D tex, vec2 uv) {
  return max(textureLod(tex, uv, 3.0) - hdr_threshold, vec4(0.0));
}

void fragment() {
  vec2 ps = SCREEN_PIXEL_SIZE;
  // Get blurred color from pixels considered glowing
  vec4 col = texture(SCREEN_TEXTURE, SCREEN_UV);
  vec4 glow = vec4(0);
  if (length(col.xyz) > color_threshold) {
    vec4 col0 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(-ps.x, 0.0)) +
                sample_glow_pixel_wide(SCREEN_TEXTURE, SCREEN_UV + vec2(-ps.x * 2.0, 0.0));
    vec4 col1 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(ps.x, 0.0)) +
                sample_glow_pixel_wide(SCREEN_TEXTURE, SCREEN_UV + vec2(ps.x * 2.0, 0.0));
    vec4 col2 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(0.0, -ps.y)) +
                sample_glow_pixel_wide(SCREEN_TEXTURE, SCREEN_UV + vec2(0.0, -ps.y * 2.0));
    vec4 col3 = sample_glow_pixel(SCREEN_TEXTURE, SCREEN_UV + vec2(0.0, ps.y)) +
                sample_glow_pixel_wide(SCREEN_TEXTURE, SCREEN_UV + vec2(0.0, ps.y * 2.0));
    glow = 0.25 * (col0 + col1 + col2 + col3)
  }
  
  COLOR = vec4(col.rgb + glow.rgb, col.a);
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/hdr_threshold = 0.3
shader_param/color_threshold = 0.515

[node name="ChargeTurret" type="Node2D"]
script = ExtResource( 2 )
curve = SubResource( 1 )
after_curve = SubResource( 2 )

[node name="Turret" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="Turret"]
position = Vector2( 4, 0 )
texture = ExtResource( 1 )

[node name="Particles2D" type="Particles2D" parent="Turret"]
material = SubResource( 3 )
position = Vector2( 11, 0 )
amount = 20
visibility_rect = Rect2( -10, -10, 20, 20 )
process_material = SubResource( 5 )

[node name="Beam" type="Line2D" parent="Turret"]
material = SubResource( 7 )
position = Vector2( 10, 0 )
points = PoolVector2Array( 7, 0, 16, -3, 23, -1, 29, 3, 36, -1, 40, -1 )
width = 1.0
default_color = Color( 1, 1, 1, 1 )
texture = ExtResource( 4 )
texture_mode = 2
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2
round_precision = 10

[node name="BeamParticles" type="Node2D" parent="Turret"]

[node name="Down" type="Particles2D" parent="Turret/BeamParticles"]
position = Vector2( 61, 1 )
amount = 10
visibility_rect = Rect2( -50, -2, 100, 4 )
local_coords = false
process_material = SubResource( 9 )

[node name="Middle" type="Particles2D" parent="Turret/BeamParticles"]
position = Vector2( 61, 0 )
amount = 180
lifetime = 2.0
visibility_rect = Rect2( -50, -4, 100, 8 )
local_coords = false
process_material = SubResource( 12 )

[node name="Up" type="Particles2D" parent="Turret/BeamParticles"]
position = Vector2( 61, -1 )
amount = 10
visibility_rect = Rect2( -50, -2, 100, 4 )
local_coords = false
process_material = SubResource( 13 )

[node name="Control" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Bg" type="ColorRect" parent="Control"]
margin_left = -3.0
margin_top = -5.0
margin_right = 3.0
margin_bottom = -4.0
color = Color( 0.184314, 0.184314, 0.184314, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Fg" type="ColorRect" parent="Control/Bg"]
margin_right = 6.0
margin_bottom = 1.0
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StaticBody2D" type="StaticBody2D" parent="."]
position = Vector2( -57, 0 )

[node name="Sprite" type="Sprite" parent="StaticBody2D"]
position = Vector2( 2.02656e-06, 0 )
scale = Vector2( 0.25, 3.5 )
texture = ExtResource( 5 )
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
shape = SubResource( 16 )
__meta__ = {
"_edit_lock_": true
}

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.5, 0.5 )

[node name="HDR Glow" type="ColorRect" parent="Camera2D"]
material = SubResource( 15 )
margin_left = -80.0
margin_top = -45.0
margin_right = 80.0
margin_bottom = 45.0
size_flags_horizontal = 3
size_flags_vertical = 3
__meta__ = {
"_edit_use_anchors_": false
}
